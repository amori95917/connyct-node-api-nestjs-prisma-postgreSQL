//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  fullName String
  email String [unique, not null]
  username String [unique]
  password String [not null]
  emailToken String
  passwordToken String
  confirm Boolean [not null, default: true]
  isValid Boolean [not null, default: false]
  isActive Boolean [not null, default: false]
  isSuperuser Boolean [not null, default: false]
  isEmailVerified Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  posts Post [not null]
  postRatings PostRating [not null]
  commentRatings CommentRating [not null]
  userRoles UserRole [not null]
  RoleRight RoleRight [not null]
  employee CompanyEmployee
  Company Company [not null]
  InvitedEmployee InvitedEmployee [not null]
  FollowUnfollowCompany FollowUnfollowCompany [not null]
  FollowedToUser FollowUserToUser [not null]
  FollowedByUser FollowUserToUser [not null]
  Like PostReaction [not null]
  Comment Comment [not null]
  CommentMentions CommentMentions [not null]
  CommentReactions CommentReactions [not null]
  UserProfile UserProfile
  OTP OTP [not null]

  indexes {
    (id, email) [unique]
  }
}

Table Role {
  id String [pk]
  name String [unique, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  userRoles UserRole [not null]
  RoleRight RoleRight [not null]
  InvitedEmployee InvitedEmployee [not null]
}

Table Right {
  id String [pk]
  name String [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  RoleRight RoleRight [not null]
}

Table UserRole {
  id String [pk]
  userId String [unique, not null]
  user User [not null]
  roleId String [not null]
  role Role [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table UserProfile {
  id String [pk]
  address String
  phoneNo String
  profileImage String
  userId String [unique, not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table RoleRight {
  id String [pk]
  roleId String [not null]
  role Role [not null]
  rightId String [not null]
  right Right [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  User User
  userId String

  indexes {
    (roleId, rightId) [unique]
  }
}

Table Company {
  id String [pk]
  name String
  legalName String [unique, not null]
  registrationNumber String [unique]
  establishedDate DateTime
  companyStage CompanyStage
  description String
  mission String
  vision String
  ownership Ownership
  addresses Json
  branches Branch [not null]
  numberOfemployees Int [not null, default: 1]
  contactEmail String [unique]
  transactions Float
  isActive Boolean [not null, default: false]
  isVerified Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  employees CompanyEmployee [not null]
  owner User [not null]
  ownerId String [not null]
  FollowUnfollowCompany FollowUnfollowCompany [not null]
  website String
  contactNumber String
  slogan String
  Post Post [not null]
  avatar String
  accountStatus AccountStatus [not null, default: 'PENDING']
  reason String
}

Table Branch {
  id String [pk]
  name String
  type BranchType [not null]
  contactNumber String [not null]
  contactEmail String [not null]
  country String [not null]
  city String [not null]
  zipCode String
  state String
  street1 String
  street2 String
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  Company Company [not null]
  companyId String [not null]

  indexes {
    (contactNumber, contactEmail) [unique]
  }
}

Table CompanyEmployee {
  id String [pk]
  employeeId String [unique, not null]
  employee User [not null]
  companyId String [not null]
  company Company [not null]
}

Table Tag {
  id String [pk]
  name String [unique, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  TagWithPost TagWithPost [not null]
}

Table TagWithPost {
  id String [pk]
  tagsId String [not null]
  tags Tag
  postId String [not null]
  post Post
}

Table Post {
  id String [pk]
  text String
  rating Int [not null, default: 0]
  creatorId String [not null]
  creator User [not null]
  postRating PostRating [not null]
  comments Comment [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  Product Product [not null]
  TagWithPost TagWithPost [not null]
  isSaleAble Boolean [not null, default: false]
  isDeleted Boolean [not null, default: false]
  isVerified Boolean [not null, default: false]
  isPublished Boolean [not null, default: false]
  companyId String [not null]
  company Company [not null]
  Like PostReaction [not null]
  PostImage PostImage [not null]
}

Table PostImage {
  id String [pk]
  metaTitle String
  imageURL String [unique]
  description String
  postId String
  post Post
  isDeleted Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table Product {
  id String [pk]
  name String
  description String
  image String [not null]
  postId String [not null]
  post Post
}

Table Reactions {
  id String [pk]
  reactionType String [unique, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime [default: `now()`]
  PostReaction PostReaction [not null]
}

Table PostReaction {
  id String [pk]
  reactionId String [not null]
  reactions Reactions [not null]
  postId String [not null]
  post Post
  userId String [not null]
  user User
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table PostRating {
  userId String [not null]
  postId String [not null]
  rating RatingStatus [not null]
  user User [not null]
  post Post [not null]

  indexes {
    (userId, postId) [unique]
  }
}

Table Comment {
  id String [pk]
  text String [not null]
  rating Int [not null, default: 0]
  creatorId String [not null]
  postId String
  repliedToCommentId String
  repliedToReplyId String
  commentRating CommentRating [not null]
  user User [not null]
  post Post
  parentComment Comment
  comments Comment [not null]
  parentReply Comment
  replies Comment [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  CommentMentions CommentMentions [not null]
  CommentReactions CommentReactions [not null]
}

Table CommentMentions {
  id String [pk]
  mentionId String
  user User
  commentId String
  comment Comment
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommentReactions {
  id String [pk]
  reactionId String [not null]
  commentId String [not null]
  creatorId String [not null]
  comment Comment [not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommentRating {
  userId String [not null]
  commentId String [not null]
  rating RatingStatus [not null]
  user User [not null]
  comment Comment [not null]

  indexes {
    (userId, commentId) [unique]
  }
}

Table InvitedEmployee {
  id String [pk]
  invitedBy User [not null]
  invitedId String [not null]
  invitedEmail String [unique, not null]
  invitedRole Role [not null]
  invitedRoleId String [not null]
  isInviteAccepted Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table FollowUnfollowCompany {
  id String [pk]
  followedBy User [not null]
  followedById String [not null]
  followedTo Company [not null]
  followedToId String [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table FollowUserToUser {
  id String [pk]
  followedTo User [not null]
  followedToId String [not null]
  followedBy User [not null]
  followedById String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table Industry {
  id String [pk]
  type String [unique, not null]
  description String
  isActive Boolean [not null, default: false]
  pirorityOrder Int [increment, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table OTP {
  id String [pk]
  otp Int [not null]
  expirationDate DateTime [not null]
  userId String [not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Enum CompanyStage {
  STARTUP
  SCALEUP
}

Enum Ownership {
  SOLE
  PARTNERSHIP
  CORPORATE
  LIMITEDLIABILITYCOMPANY
  NONPROFIT
}

Enum RatingStatus {
  NEUTRAL
  UPVOTED
  DOWNVOTED
}

Enum BranchType {
  CORPORATE
  BRANCH_OFFICE
}

Enum AccountStatus {
  APPROVED
  PENDING
  REJECTED
}

Ref: UserRole.userId > User.id

Ref: UserRole.roleId > Role.id

Ref: UserProfile.userId - User.id [delete: Cascade]

Ref: RoleRight.roleId > Role.id

Ref: RoleRight.rightId > Right.id

Ref: RoleRight.userId > User.id

Ref: Company.ownerId > User.id [delete: Cascade]

Ref: Branch.companyId > Company.id

Ref: CompanyEmployee.employeeId - User.id [delete: Cascade]

Ref: CompanyEmployee.companyId > Company.id [delete: Cascade]

Ref: TagWithPost.tagsId > Tag.id

Ref: TagWithPost.postId > Post.id

Ref: Post.creatorId > User.id

Ref: Post.companyId > Company.id [delete: Cascade]

Ref: PostImage.postId > Post.id [delete: Cascade]

Ref: Product.postId > Post.id [delete: Cascade]

Ref: PostReaction.reactionId > Reactions.id

Ref: PostReaction.postId > Post.id

Ref: PostReaction.userId > User.id

Ref: PostRating.userId > User.id

Ref: PostRating.postId > Post.id

Ref: Comment.creatorId > User.id [delete: Cascade]

Ref: Comment.postId > Post.id [delete: Cascade]

Ref: Comment.repliedToCommentId - Comment.id [delete: Cascade]

Ref: Comment.repliedToReplyId - Comment.id [delete: Cascade]

Ref: CommentMentions.mentionId > User.id [delete: Cascade]

Ref: CommentMentions.commentId > Comment.id [delete: Cascade]

Ref: CommentReactions.commentId > Comment.id [delete: Cascade]

Ref: CommentReactions.creatorId > User.id [delete: Cascade]

Ref: CommentRating.userId > User.id

Ref: CommentRating.commentId > Comment.id

Ref: InvitedEmployee.invitedId > User.id

Ref: InvitedEmployee.invitedRoleId > Role.id

Ref: FollowUnfollowCompany.followedById > User.id [delete: Cascade]

Ref: FollowUnfollowCompany.followedToId > Company.id [delete: Cascade]

Ref: FollowUserToUser.followedToId > User.id [delete: Cascade]

Ref: FollowUserToUser.followedById > User.id [delete: Cascade]

Ref: OTP.userId > User.id