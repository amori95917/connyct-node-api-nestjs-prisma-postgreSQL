//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  fullName String
  email String [unique, not null]
  username String [unique]
  password String [not null]
  emailToken String
  passwordToken String
  confirm Boolean [not null, default: true]
  isValid Boolean [not null, default: false]
  isActive Boolean [not null, default: false]
  isSuperuser Boolean [not null, default: false]
  isEmailVerified Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  activeRole Role
  posts Post [not null]
  postRatings PostRating [not null]
  commentRatings CommentRating [not null]
  userRoles UserRole [not null]
  RoleRight RoleRight [not null]
  employee CompanyEmployee
  Company Company [not null]
  InvitedEmployee InvitedEmployee [not null]
  FollowUnfollowCompany FollowUnfollowCompany [not null]
  FollowedToUser FollowUserToUser [not null]
  FollowedByUser FollowUserToUser [not null]
  Like PostReaction [not null]
  Comment Comment [not null]
  CommentMentions CommentMentions [not null]
  CommentReactions CommentReactions [not null]
  UserProfile UserProfile
  OTP OTP [not null]
  DiscussionVote DiscussionVote [not null]
  DiscussionAnswer DiscussionAnswer [not null]
  CompanyDiscussions CompanyDiscussions [not null]
  DiscussionAnswerVote DiscussionAnswerVote [not null]
  DiscussionAnswerMentions DiscussionAnswerMentions [not null]
  CompanyCommunity CompanyCommunity [not null]
  CompanyCommunityRole CompanyCommunityRole [not null]
  InvitedBYUser CommunityMember [not null]
  CommunityMember CommunityMember [not null]
  CommunityComment CommunityComment [not null]
  CommunityPost CommunityPost [not null]
  CommunityPostReaction CommunityPostReaction [not null]
  roleId String
  CommunityPostCommentReaction CommunityPostCommentReaction [not null]
  ProductFeedback ProductFeedback [not null]
  CommunityPostCommentMentions CommunityPostCommentMentions [not null]

  indexes {
    (id, email) [unique]
  }
}

Table Role {
  id String [pk]
  name String [unique, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  userRoles UserRole [not null]
  RoleRight RoleRight [not null]
  InvitedEmployee InvitedEmployee [not null]
  User User [not null]
}

Table Right {
  id String [pk]
  name String [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  RoleRight RoleRight [not null]
}

Table UserRole {
  id String [pk]
  userId String [not null]
  user User [not null]
  roleId String [not null]
  role Role [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table UserProfile {
  id String [pk]
  address String
  phoneNo String
  profileImage String
  userId String [unique, not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table RoleRight {
  id String [pk]
  roleId String [not null]
  role Role [not null]
  rightId String [not null]
  right Right [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  User User
  userId String

  indexes {
    (roleId, rightId) [unique]
  }
}

Table Company {
  id String [pk]
  name String
  legalName String [unique, not null]
  registrationNumberType RegistrationNumberType
  registrationNumber String [unique]
  establishedDate DateTime
  companyStage CompanyStage
  description String
  mission String
  vision String
  ownership Ownership
  branches Branch [not null]
  numberOfemployees Int [not null, default: 1]
  contactEmail String [unique]
  transactions Float
  isActive Boolean [not null, default: false]
  isVerified Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  employees CompanyEmployee [not null]
  owner User [not null]
  ownerId String [not null]
  FollowUnfollowCompany FollowUnfollowCompany [not null]
  website String
  contactNumber String
  slogan String
  Post Post [not null]
  avatar String
  accountStatus AccountStatus [not null, default: 'PENDING']
  reason String
  slug String [unique, not null]
  CompanyDiscussions CompanyDiscussions [not null]
  CompanyDocument CompanyDocument [not null]
  CompanyCommunity CompanyCommunity [not null]
  CommunityMember CommunityMember [not null]
  Product Product [not null]
}

Table CompanyDocument {
  id String [pk]
  companyId String [not null]
  company Company [not null]
  type CompanyDocumentType [not null]
  document String [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table Branch {
  id String [pk]
  type BranchType [not null]
  contactNumber String [unique, not null]
  contactEmail String [unique, not null]
  country String [not null]
  city String [not null]
  zipCode String
  state String
  street String
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  Company Company [not null]
  companyId String [not null]

  indexes {
    (contactNumber, contactEmail) [unique]
  }
}

Table CompanyEmployee {
  id String [pk]
  employeeId String [unique, not null]
  employee User [not null]
  companyId String [not null]
  company Company [not null]
}

Table Tag {
  id String [pk]
  name String [unique, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  TagWithPost TagWithPost [not null]
}

Table TagWithPost {
  id String [pk]
  tagsId String [not null]
  tags Tag
  postId String
  post Post
  communityPostId String
  communityPost CommunityPost
}

Table Post {
  id String [pk]
  text String
  rating Int [not null, default: 0]
  creatorId String [not null]
  creator User [not null]
  postRating PostRating [not null]
  comments Comment [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  Product Product [not null]
  TagWithPost TagWithPost [not null]
  isSaleAble Boolean [not null, default: false]
  isDeleted Boolean [not null, default: false]
  isVerified Boolean [not null, default: false]
  isPublished Boolean [not null, default: false]
  companyId String [not null]
  company Company [not null]
  Like PostReaction [not null]
  PostImage PostImage [not null]
}

Table PostImage {
  id String [pk]
  metaTitle String
  imageURL String [unique]
  description String
  postId String [not null]
  post Post [not null]
  isDeleted Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table Reactions {
  id String [pk]
  reactionType String [unique, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime [default: `now()`]
  PostReaction PostReaction [not null]
}

Table PostReaction {
  id String [pk]
  reactionId String [not null]
  reactions Reactions [not null]
  postId String [not null]
  post Post
  userId String [not null]
  user User
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table PostRating {
  userId String [not null]
  postId String [not null]
  rating RatingStatus [not null]
  user User [not null]
  post Post [not null]

  indexes {
    (userId, postId) [unique]
  }
}

Table Comment {
  id String [pk]
  content String [not null]
  postId String
  post Post
  authorId String [not null]
  author User [not null]
  commentId String
  replies Comment
  Comment Comment [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  CommentMentions CommentMentions [not null]
  CommentReactions CommentReactions [not null]
  CommentRating CommentRating [not null]
}

Table CommentMentions {
  id String [pk]
  mentionId String
  user User
  commentId String
  comment Comment
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommentReactions {
  id String [pk]
  reactionId String [not null]
  commentId String [not null]
  creatorId String [not null]
  comment Comment [not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommentRating {
  userId String [not null]
  commentId String [not null]
  rating RatingStatus [not null]
  user User [not null]
  comment Comment [not null]

  indexes {
    (userId, commentId) [unique]
  }
}

Table InvitedEmployee {
  id String [pk]
  invitedBy User [not null]
  invitedId String [not null]
  invitedEmail String [unique, not null]
  invitedRole Role [not null]
  invitedRoleId String [not null]
  isInviteAccepted Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table FollowUnfollowCompany {
  id String [pk]
  followedBy User [not null]
  followedById String [not null]
  followedTo Company [not null]
  followedToId String [not null]
  isConnected Boolean [not null, default: true]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table FollowUserToUser {
  id String [pk]
  followedTo User [not null]
  followedToId String [not null]
  followedBy User [not null]
  followedById String [not null]
  isConnected Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table Industry {
  id String [pk]
  type String [unique, not null]
  description String
  isActive Boolean [not null, default: false]
  pirorityOrder Int [increment, not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table OTP {
  id String [pk]
  otp Int [not null]
  expirationDate DateTime [not null]
  userId String [not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CompanyDiscussions {
  id String [pk]
  title String [not null]
  description String [not null]
  userId String [not null]
  user User [not null]
  companyId String [not null]
  company Company [not null]
  DiscussionVote DiscussionVote [not null]
  DiscussionAnswer DiscussionAnswer [not null]
  slug String
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  DiscussionAnswerVote DiscussionAnswerVote [not null]
}

Table DiscussionVote {
  id String [pk]
  vote Vote [not null]
  userId String [not null]
  user User [not null]
  discussionId String [not null]
  companyDiscussion CompanyDiscussions [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table DiscussionAnswer {
  id String [pk]
  answer String [not null]
  discussionId String [not null]
  discussion CompanyDiscussions [not null]
  userId String [not null]
  user User [not null]
  repliedToAnswerId String
  parentAnswer DiscussionAnswer
  DiscussionAnswer DiscussionAnswer [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  DiscussionAnswerVote DiscussionAnswerVote [not null]
  DiscussionAnswerMentions DiscussionAnswerMentions [not null]
}

Table DiscussionAnswerVote {
  id String [pk]
  vote Vote [not null]
  discussionId String [not null]
  discussion CompanyDiscussions [not null]
  discussionAnswerId String [not null]
  discussionAnswer DiscussionAnswer [not null]
  userId String [not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table DiscussionAnswerMentions {
  id String [pk]
  mentionId String [not null]
  user User [not null]
  answerId String [not null]
  answer DiscussionAnswer [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CompanyCommunity {
  id String [pk]
  name String [not null]
  description String [not null]
  type CommunityType [not null]
  profile String
  coverImage String
  slug String [unique, not null]
  companyId String [not null]
  company Company [not null]
  creatorId String [not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  CompanyCommunityRole CompanyCommunityRole [not null]
  CommunityMember CommunityMember [not null]
  CommunityPolicy CommunityPolicy [not null]
  CommunityPost CommunityPost [not null]
}

Table CompanyCommunityRole {
  id String [pk]
  role CommunityRole [not null]
  communityId String [not null]
  companyCommunity CompanyCommunity [not null]
  userId String [not null]
  user User [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommunityMember {
  id String [pk]
  invitedById String
  invitedByUser User
  communityId String [not null]
  community CompanyCommunity [not null]
  memberId String [not null]
  member User [not null]
  companyId String [not null]
  company Company [not null]
  isAccepted Boolean [not null, default: false]
  isConnected Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommunityPolicy {
  id String [pk]
  title String [not null]
  description String [not null]
  isActive Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  community CompanyCommunity [not null]
  communityId String [not null]
}

Table CommunityPost {
  id String [pk]
  text String
  communityId String [not null]
  community CompanyCommunity [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  CommunityPostMedia CommunityPostMedia [not null]
  authorId String [not null]
  author User [not null]
  slug String [not null]
  isDeleted Boolean [not null, default: false]
  isApproved Boolean [not null, default: true]
  TagWithPost TagWithPost [not null]
  CommunityComment CommunityComment [not null]
  CommunityPostReaction CommunityPostReaction [not null]
}

Table CommunityPostMedia {
  id String [pk]
  metaTitle String
  imageURL String [unique]
  description String
  communityPostId String [not null]
  communityPost CommunityPost [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommunityPostReaction {
  id String [pk]
  reactions ReactionsType [not null]
  communityPostId String [not null]
  communityPost CommunityPost
  userId String [not null]
  user User
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommunityComment {
  id String [pk]
  content String [not null]
  communityPostId String
  communityPost CommunityPost
  authorId String [not null]
  author User [not null]
  commentId String
  replies CommunityComment
  CommunityComment CommunityComment [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  CommunityPostCommentReaction CommunityPostCommentReaction [not null]
  CommunityPostCommentMentions CommunityPostCommentMentions [not null]
}

Table CommunityPostCommentMentions {
  id String [pk]
  mentionId String
  user User
  commentId String
  communityPostComment CommunityComment
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table CommunityPostCommentReaction {
  id String [pk]
  reactions ReactionsType [not null]
  communityPostCommentId String [not null]
  communityPostComment CommunityComment
  userId String [not null]
  user User
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table ProductCategory {
  id String [pk]
  categoryType String [unique, not null]
  description String
  image String
  isRoot Boolean [not null, default: false]
  isLeaf Boolean [not null, default: false]
  level Float [not null]
  isActive Boolean [not null, default: false]
  parentId String
  subCategory ProductCategory
  category ProductCategory [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  Product Product [not null]
}

Table Product {
  id String [pk]
  sku String [not null]
  productName String [not null]
  price String [not null]
  rating String
  slug String
  isSaleAble Boolean [not null, default: false]
  isAvailable Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  companyId String [not null]
  company Company [not null]
  ProductImage ProductImage [not null]
  ProductAttribute ProductAttribute
  ProductVariation ProductVariation [not null]
  categoryId String [not null]
  category ProductCategory [not null]
  ProductFeedback ProductFeedback [not null]
  Post Post
  postId String
  ProductType ProductType
  productTypeId String
}

Table ProductImage {
  id String [pk]
  image String [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  productId String [not null]
  product Product [not null]
  productVariationId String
  productVariation ProductVariation
}

Table ProductAttribute {
  id String [pk]
  description String
  specification String
  benefits String
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  productVariationId String [unique]
  productVariation ProductVariation
  productId String [unique]
  product Product
  ProductType ProductType
  productTypeId String
}

Table ProductVariation {
  id String [pk]
  title String [not null]
  sku String [not null]
  price String [not null]
  size String
  color String
  rating String
  isAvailable Boolean [not null, default: false]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  ProductAttribute ProductAttribute
  productId String
  product Product
  ProductImage ProductImage [not null]
}

Table ProductType {
  id String [pk]
  name String [not null]
  Product Product [not null]
  ProductAttribute ProductAttribute [not null]
}

Table ProductFeedback {
  id String [pk]
  text String [not null]
  userId String [not null]
  user User [not null]
  productId String [not null]
  product Product [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Enum RegistrationNumberType {
  PAN
  VAT
}

Enum CompanyDocumentType {
  PAN
  VAT
  COMPANY_REGISTRATION
  TAX_CLEARANCE
  BANK_CHEQUE
  TRADEMARK
}

Enum ReactionsType {
  LIKE
  USEFUL
  PRAISE
  AAPPRECIATION
  INSIGHTFUL
  CURIOUS
  DISGUSTING
}

Enum CompanyStage {
  STARTUP
  SCALEUP
}

Enum Ownership {
  SOLE
  PARTNERSHIP
  CORPORATE
  LIMITEDLIABILITYCOMPANY
  NONPROFIT
}

Enum RatingStatus {
  NEUTRAL
  UPVOTED
  DOWNVOTED
}

Enum BranchType {
  HEADQUARTER
  BRANCH_OFFICE
}

Enum AccountStatus {
  APPROVED
  REVIEW
  PENDING
  REJECTED
}

Enum Vote {
  UPVOTE
  DOWNVOTE
}

Enum CommunityType {
  PRIVATE
  PUBLIC
}

Enum CommunityRole {
  ADMIN
  MODERATOR
  MEMBER
}

Ref: User.roleId > Role.id

Ref: UserRole.userId > User.id

Ref: UserRole.roleId > Role.id

Ref: UserProfile.userId - User.id [delete: Cascade]

Ref: RoleRight.roleId > Role.id

Ref: RoleRight.rightId > Right.id

Ref: RoleRight.userId > User.id

Ref: Company.ownerId > User.id [delete: Cascade]

Ref: CompanyDocument.companyId > Company.id [delete: Cascade]

Ref: Branch.companyId > Company.id

Ref: CompanyEmployee.employeeId - User.id [delete: Cascade]

Ref: CompanyEmployee.companyId > Company.id [delete: Cascade]

Ref: TagWithPost.tagsId > Tag.id

Ref: TagWithPost.postId > Post.id

Ref: TagWithPost.communityPostId > CommunityPost.id

Ref: Post.creatorId > User.id

Ref: Post.companyId > Company.id [delete: Cascade]

Ref: PostImage.postId > Post.id [delete: Cascade]

Ref: PostReaction.reactionId > Reactions.id

Ref: PostReaction.postId > Post.id

Ref: PostReaction.userId > User.id

Ref: PostRating.userId > User.id

Ref: PostRating.postId > Post.id

Ref: Comment.postId > Post.id [delete: Cascade]

Ref: Comment.authorId > User.id [delete: Cascade]

Ref: Comment.commentId - Comment.id [delete: Cascade]

Ref: CommentMentions.mentionId > User.id [delete: Cascade]

Ref: CommentMentions.commentId > Comment.id [delete: Cascade]

Ref: CommentReactions.commentId > Comment.id [delete: Cascade]

Ref: CommentReactions.creatorId > User.id [delete: Cascade]

Ref: CommentRating.userId > User.id

Ref: CommentRating.commentId > Comment.id

Ref: InvitedEmployee.invitedId > User.id

Ref: InvitedEmployee.invitedRoleId > Role.id

Ref: FollowUnfollowCompany.followedById > User.id [delete: Cascade]

Ref: FollowUnfollowCompany.followedToId > Company.id [delete: Cascade]

Ref: FollowUserToUser.followedToId > User.id [delete: Cascade]

Ref: FollowUserToUser.followedById > User.id [delete: Cascade]

Ref: OTP.userId > User.id

Ref: CompanyDiscussions.userId > User.id [delete: Cascade]

Ref: CompanyDiscussions.companyId > Company.id [delete: Cascade]

Ref: DiscussionVote.userId > User.id [delete: Cascade]

Ref: DiscussionVote.discussionId > CompanyDiscussions.id [delete: Cascade]

Ref: DiscussionAnswer.discussionId > CompanyDiscussions.id [delete: Cascade]

Ref: DiscussionAnswer.userId > User.id [delete: Cascade]

Ref: DiscussionAnswer.repliedToAnswerId - DiscussionAnswer.id

Ref: DiscussionAnswerVote.discussionId > CompanyDiscussions.id [delete: Cascade]

Ref: DiscussionAnswerVote.discussionAnswerId > DiscussionAnswer.id [delete: Cascade]

Ref: DiscussionAnswerVote.userId > User.id [delete: Cascade]

Ref: DiscussionAnswerMentions.mentionId > User.id [delete: Cascade]

Ref: DiscussionAnswerMentions.answerId > DiscussionAnswer.id [delete: Cascade]

Ref: CompanyCommunity.companyId > Company.id [delete: Cascade]

Ref: CompanyCommunity.creatorId > User.id [delete: Cascade]

Ref: CompanyCommunityRole.communityId > CompanyCommunity.id [delete: Cascade]

Ref: CompanyCommunityRole.userId > User.id [delete: Cascade]

Ref: CommunityMember.invitedById > User.id [delete: Cascade]

Ref: CommunityMember.communityId > CompanyCommunity.id [delete: Cascade]

Ref: CommunityMember.memberId > User.id [delete: Cascade]

Ref: CommunityMember.companyId > Company.id [delete: Cascade]

Ref: CommunityPolicy.communityId > CompanyCommunity.id

Ref: CommunityPost.communityId > CompanyCommunity.id [delete: Cascade]

Ref: CommunityPost.authorId > User.id [delete: Cascade]

Ref: CommunityPostMedia.communityPostId > CommunityPost.id [delete: Cascade]

Ref: CommunityPostReaction.communityPostId > CommunityPost.id

Ref: CommunityPostReaction.userId > User.id

Ref: CommunityComment.communityPostId > CommunityPost.id [delete: Cascade]

Ref: CommunityComment.authorId > User.id [delete: Cascade]

Ref: CommunityComment.commentId - CommunityComment.id [delete: Cascade]

Ref: CommunityPostCommentMentions.mentionId > User.id [delete: Cascade]

Ref: CommunityPostCommentMentions.commentId > CommunityComment.id [delete: Cascade]

Ref: CommunityPostCommentReaction.communityPostCommentId > CommunityComment.id

Ref: CommunityPostCommentReaction.userId > User.id

Ref: ProductCategory.parentId - ProductCategory.id

Ref: Product.companyId > Company.id [delete: Cascade]

Ref: Product.categoryId > ProductCategory.id

Ref: Product.postId > Post.id

Ref: Product.productTypeId > ProductType.id

Ref: ProductImage.productId > Product.id

Ref: ProductImage.productVariationId > ProductVariation.id [delete: Cascade]

Ref: ProductAttribute.productVariationId - ProductVariation.id [delete: Cascade]

Ref: ProductAttribute.productId - Product.id [delete: Cascade]

Ref: ProductAttribute.productTypeId > ProductType.id

Ref: ProductVariation.productId > Product.id [delete: Cascade]

Ref: ProductFeedback.userId > User.id [delete: Cascade]

Ref: ProductFeedback.productId > Product.id [delete: Cascade]